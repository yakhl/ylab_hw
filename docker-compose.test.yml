version: "3.8"

services:
  postgres_test:
    container_name: postgres_test
    image: postgres:15.1-alpine
    volumes:
      - postgres_test:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - PGPORT=6543
      - PGUSER=postgres
    ports:
      - "6543"
    networks:
      - test_network
    healthcheck:
      test: sh -c "pg_isready -U postgres -d postgres"
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s

  redis_test:
    container_name: redis_test
    image: redis:7.0-alpine
    volumes:
      - redis_test:/data
    ports:
      - "6380"
    networks:
      - test_network
    healthcheck:
      test: sh -c "redis-cli ping"
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s

  fastapi_test:
    container_name: fastapi_test
    build:
      context: .
      dockerfile: ./tests/Dockerfile
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_HOST=postgres_test
      - POSTGRES_PORT=6543
      - REDIS_HOST=redis_test
      - REDIS_PORT=6380
    entrypoint: sh -c "alembic upgrade head && pytest -p no:warnings"
    networks:
      - test_network
    depends_on:
      postgres_test:
        condition: service_healthy
      redis_test:
        condition: service_healthy

networks:
  test_network:
    name: test_network

volumes:
  postgres_test:
  redis_test:
